{
  "count_subjects_by_condition": "MATCH (p:Subject)-[:HAS_CONDITION]->(:Condition {name:'{cond}'}) RETURN count(*) AS n",
  "count_subjects": "MATCH (p:Subject) RETURN count(*) AS n",
  "mean_joint_side_condition":
"MATCH (p:Subject)-[:HAS_CONDITION]->(:Condition {name:'{cond}'})\nMATCH (p)-[:HAS_SAMPLE]->(:Sample)-[:HAS_VALUE]->(fv:FeatureValue)-[:OF_FEATURE]->(f:Feature)\nWHERE f.stat='{stat}' AND f.code =~ '{code_regex}'\nRETURN '{joint}' AS joint, '{side}' AS side, '{cond}' AS condition, round(avg(fv.value),2) AS mean_deg, count(*) AS n",
  "coupling_knee_ankle":
"CALL () {\n  WITH *\n  UNWIND [ ['L','HIANL','KNFOL'], ['R','HIANR','KNFOR'] ] AS cfg\n  WITH cfg[0] AS side, cfg[1] AS knee_code, cfg[2] AS ankle_code\n  MATCH (p:Subject)-[:HAS_CONDITION]->(:Condition {name:'{cond}'})\n  MATCH (p)-[:HAS_SAMPLE]->(s:Sample)\n  MATCH (s)-[:HAS_VALUE]->(kfv:FeatureValue)-[:OF_FEATURE]->(kf:Feature)\n  WHERE kf.stat='mean' AND kf.code =~ ('(?i).*' + knee_code + '\\\\s*$')\n  MATCH (s)-[:HAS_VALUE]->(afv:FeatureValue)-[:OF_FEATURE]->(af:Feature)\n  WHERE af.stat='mean' AND af.code =~ ('(?i).*' + ankle_code + '\\\\s*$')\n  WITH side, p.pid AS pid, avg(kfv.value) AS knee_subj_mean, avg(afv.value) AS ankle_subj_mean\n  WITH side, collect(knee_subj_mean) AS X, collect(ankle_subj_mean) AS Y, size(X) AS n,\n       reduce(a=0.0, v IN X | a+v) AS sx,\n       reduce(a=0.0, v IN Y | a+v) AS sy,\n       reduce(a=0.0, i IN range(0,n-1) | a + X[i]*Y[i]) AS sxy,\n       reduce(a=0.0, i IN range(0,n-1) | a + X[i]*X[i]) AS sxx,\n       reduce(a=0.0, i IN range(0,n-1) | a + Y[i]*Y[i]) AS syy\n  WITH side, n, sx, sy, sxy, sxx, syy, (n*sxx - sx*sx) AS denom, (n*sxy - sx*sy) AS num, (n*syy - sy*sy) AS Syy\n  RETURN '{cond}' AS condition, side, n,\n         round(CASE WHEN denom<>0 THEN num*1.0/denom ELSE null END,4) AS beta,\n         round(CASE WHEN n>0 THEN (sy - (CASE WHEN denom<>0 THEN num*1.0/denom ELSE 0 END)*sx)*1.0/n ELSE null END,4) AS alpha,\n         round(CASE WHEN denom>0 AND Syy>0 THEN (1.0*num*num)/(denom*Syy) ELSE null END,4) AS R2,\n         round(CASE WHEN denom<>0 THEN (num*1.0/denom)*5.0 ELSE null END,4) AS delta_for_plus5\n}\nRETURN condition, side, n, beta, alpha, R2, delta_for_plus5\nORDER BY side"
}
[
  {
    "q": "Πόση είναι η μέση γωνία του γόνατος σε παιδιά με ASD (δεξί/αριστερό);",
    "cypher": "MATCH (p:Subject)-[:HAS_CONDITION]->(:Condition {name:'ASD'})\nMATCH (p)-[:HAS_SAMPLE]->(:Sample)-[:HAS_VALUE]->(fv)-[:OF_FEATURE]->(f:Feature)\nWHERE f.stat='mean' AND (f.code =~ '(?i).*HIANL\\\\s*$' OR f.code =~ '(?i).*HIANR\\\\s*$')\nRETURN CASE WHEN f.code =~ '(?i).*L\\\\s*$' THEN 'L' ELSE 'R' END AS side,\n       round(avg(fv.value),2) AS mean_deg, count(*) AS n\nORDER BY side;"
  },
  {
    "q": "Αν αυξηθεί η γωνία του γόνατος κατά 5°, τι γίνεται στον αστράγαλο (ASD, δεξί);",
    "cypher": "UNWIND [['R','HIANR','KNFOR']] AS cfg\nWITH cfg[0] AS side, cfg[1] AS knee_code, cfg[2] AS ankle_code\nMATCH (p:Subject)-[:HAS_CONDITION]->(:Condition {name:'ASD'})\nMATCH (p)-[:HAS_SAMPLE]->(s:Sample)\nMATCH (s)-[:HAS_VALUE]->(kfv:FeatureValue)-[:OF_FEATURE]->(kf:Feature)\nWHERE kf.stat='mean' AND kf.code =~ ('(?i).*' + knee_code + '\\\\s*$')\nMATCH (s)-[:HAS_VALUE]->(afv:FeatureValue)-[:OF_FEATURE]->(af:Feature)\nWHERE af.stat='mean' AND af.code =~ ('(?i).*' + ankle_code + '\\\\s*$')\nWITH kfv.value AS x, afv.value AS y\nWITH count(*) AS n, avg(x) AS xbar, avg(y) AS ybar, avg(x*y) AS xym, avg(x*x) AS xxm,\n     (avg(x*x)-avg(x)*avg(x)) AS denom\nRETURN n,\n       round((xym - xbar*ybar)/denom,4) AS beta,\n       round(((xym - xbar*ybar)/denom)*5.0,4) AS delta_for_plus5;"
  },
  {
    "q": "Δώσε knee→ankle coupling per subject για ASD και TD (L/R).",
    "cypher": "CALL {\n  UNWIND [['L','HIANL','KNFOL'], ['R','HIANR','KNFOR']] AS cfg\n  UNWIND ['ASD','TD'] AS cond\n  WITH cond AS condition, cfg[0] AS side, cfg[1] AS knee_code, cfg[2] AS ankle_code\n  MATCH (p:Subject)-[:HAS_CONDITION]->(:Condition {name:condition})\n  MATCH (p)-[:HAS_SAMPLE]->(s:Sample)\n  MATCH (s)-[:HAS_VALUE]->(kfv:FeatureValue)-[:OF_FEATURE]->(kf:Feature)\n  WHERE kf.stat='mean' AND kf.code =~ ('(?i).*' + knee_code + '\\\\s*$')\n  MATCH (s)-[:HAS_VALUE]->(afv:FeatureValue)-[:OF_FEATURE]->(af:Feature)\n  WHERE af.stat='mean' AND af.code =~ ('(?i).*' + ankle_code + '\\\\s*$')\n  WITH condition, side, p.pid AS pid, avg(kfv.value) AS knee_subj_mean, avg(afv.value) AS ankle_subj_mean\n  WITH condition, side, collect(knee_subj_mean) AS X, collect(ankle_subj_mean) AS Y\n  WITH condition, side, X, Y, size(X) AS n,\n       reduce(a=0.0, v IN X | a+v) AS sx,\n       reduce(a=0.0, v IN Y | a+v) AS sy,\n       reduce(a=0.0, i IN range(0,size(X)-1) | a + X[i]*Y[i]) AS sxy,\n       reduce(a=0.0, i IN range(0,size(X)-1) | a + X[i]*X[i]) AS sxx,\n       reduce(a=0.0, i IN range(0,size(X)-1) | a + Y[i]*Y[i]) AS syy\n  WITH condition, side, n, sx, sy, sxy, sxx, syy,\n       (n*sxx - sx*sx) AS denom,\n       (n*sxy - sx*sy) AS num,\n       (n*syy - sy*sy) AS Syy\n  RETURN condition, side, n,\n         round(CASE WHEN denom<>0 THEN num*1.0/denom ELSE null END,4) AS beta,\n         null AS alpha,\n         round(CASE WHEN denom>0 AND Syy>0 THEN (1.0*num*num)/(denom*Syy) ELSE null END,4) AS R2,\n         round(CASE WHEN denom<>0 THEN (num*1.0/denom)*5.0 ELSE null END,4) AS delta_for_plus5\n}\nRETURN condition, side, n, beta, alpha, R2, delta_for_plus5;"
  }
]